{"version":3,"sources":["components/header/styles.js","components/header/index.js","global.js","services/api.js","Utils/validation.js","pages/contato/styles.js","pages/contato/index.js","App.js","index.js"],"names":["Wrapper","styled","header","Header","width","id","x","y","viewBox","fill","d","GlobalStyles","createGlobalStyle","require","config","api","axios","create","baseURL","process","BASE_URL","emailValidate","RegExp","Input","input","div","Form","FormContainer","FormGroup","CheckboxGroup","CheckboxItem","TagContainer","Tag","Contato","ARRAY_INITIAL_VALUE","nameRef","React","useRef","emailRef","messageRef","useState","dropdown","setDropdown","tagsSelected","setTagsSelected","checkitemsSelected","setCheckitemsSelected","tags","setTags","useLayoutEffect","a","get","response","data","handleSubmit","e","preventDefault","name","current","value","email","message","alert","focus","exec","post","desc","params","idList","then","cardResponse","idCard","forEach","catch","err","checklist","checkitem","idChecklist","htmlFor","placeholder","ref","type","autoComplete","rows","style","resize","option","map","checkbox","onClick","findIndex","tag","filteredItems","filter","handleCheckboxClick","checked","includes","onChange","target","marginTop","backgroundColor","color","fontWeight","textTransform","handleTagClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe3b5fcb.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Wrapper = styled.header`\n  display:flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  top:0;\n`\n","import React from 'react'\nimport { Wrapper } from './styles'\n\nexport default function Header (){\n  return(\n    <Wrapper>\n      <svg width=\"62\" id=\"logo-slideworks\" x=\"0px\" y=\"0px\" viewBox=\"0 0 172.914 86.451\">\n          <title>Logotipo da Slideworks</title>\n          <path fill=\"#fff\" d=\"M129.688,0H43.226C19.353,0,0,19.352,0,43.225S19.353,86.45,43.226,86.45h86.462\n          c23.87,0,43.225-19.352,43.225-43.225S153.558,0,129.688,0 M129.688,13.726c16.265,0,29.502,13.234,29.502,29.499\n          c0,16.269-13.237,29.506-29.502,29.506H43.226c-16.266,0-29.503-13.237-29.503-29.506c0-16.265,13.237-29.499,29.503-29.499H129.688\n          z\"></path>\n          <path fill=\"#fff\" d=\"M64.842,43.225c0-11.937-9.677-21.613-21.616-21.613c-11.938,0-21.613,9.676-21.613,21.613\n          c0,11.94,9.676,21.62,21.613,21.62C55.166,64.845,64.842,55.166,64.842,43.225\"></path>\n      </svg>\n    </Wrapper>\n  )\n}","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  html, body {\n    margin: 0;\n    padding: 0;\n  }\n  *, *::after, *::before {\n    box-sizing: border-box;\n  }\n  body {\n    align-items: center;\n    background-color: #0D0C1D;\n    color: #EFFFFA;\n    display: flex;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    height: 100vh;\n    justify-content: center;\n    text-rendering: optimizeLegibility;\n  }\n  `","import  axios from 'axios';\nrequire('dotenv').config()\n\nconst api = axios.create({\n  baseURL: process.env.BASE_URL\n});\n\nexport default api;","export const emailValidate = new RegExp(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i)\n\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\n  width:300px;\n  height: 35px;\n  border-radius:10px;\n  margin-top:2%;\n  @media(max-width: 800px) {\n    width:100%;\n  }\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media(max-width: 800px) {\n    flex-direction: column;\n  }\n`\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content:space-around;\n  width: 60vw;\n  @media(max-width: 800px) {\n    flex-direction: column;\n  }\n`\nexport const FormContainer = styled.div`\n  margin-right: 5%;\n`\n\nexport const FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 3% 0 8% 0;\n`\n\nexport const CheckboxGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 400px;\n  margin-top:5%;\n  @media(max-width: 800px) {\n    flex-direction: row;\n    justify-content:space-around;\n  }\n`\n\nexport const CheckboxItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 5%;\n`\nexport const TagContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 250px;\n`\nexport const Tag = styled.div`\n  background-color: #EFFFFA;\n  color: #0D0C1D;\n  font-size: 0.75rem;\n  cursor: pointer;\n  padding: 5px;\n  border-radius: 5px;\n  margin: 0 5px 5px 0;\n  \n`\n\n","import React from 'react'\nimport api from '../../services/api'\nimport { emailValidate } from '../../Utils/validation'\nimport { \n  Input,\n  Wrapper,\n  Form, \n  FormGroup, \n  CheckboxGroup, \n  CheckboxItem, \n  FormContainer, \n  Tag, \n  TagContainer \n} from './styles'\n\nexport default function Contato(){\n  const TXT_INITIAL_VALUE = ''\n  const NUMBER_INITIAL_VALUE = 0\n  const ARRAY_INITIAL_VALUE = [] \n  const nameRef= React.useRef('')\n  const emailRef = React.useRef('')\n  const messageRef = React.useRef('')\n  const [dropdown, setDropdown] = React.useState(0)\n  const [tagsSelected, setTagsSelected] = React.useState([])\n  const [checkitemsSelected, setCheckitemsSelected] = React.useState([])\n  const [tags, setTags] = React.useState([])\n\n  React.useLayoutEffect(() => {\n    (async () => {\n      const response = await api.get('labels')\n      setTags(response.data)\n    })()\n  },[])\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const data = {\n      name: nameRef.current.value,\n      email: emailRef.current.value,\n      message: messageRef.current.value,\n      dropdown,\n      tagsSelected,\n      checkitemsSelected\n    }\n    if(!data.name){\n      alert('Por favor preencha o campo nome')\n      nameRef.current.focus()\n      return\n    }\n\n    if(!emailValidate.exec(data.email)){\n      alert('Por favor preencha o campo de email corretamente')\n      emailRef.current.focus()\n      return\n    }\n    if(!data.message){\n      alert('Por favor preencha o campo mensagem')\n      messageRef.current.focus()\n      return\n    }\n     api.post('cards', {\n        name: data.name,\n        desc:`${data.email}\\n${data.message}`,\n    }, { params : { idList: data.dropdown } })\n    .then(async cardResponse => {\n      // console.log(cardResponse.data.idCard, cardResponse.status)\n      const { idCard } = cardResponse.data;\n\n      tagsSelected.forEach(async value => {\n        await api.post('labels/add', {\n          value,\n          idCard\n        })\n        .catch(err => alert('Erro ao adicionar as tags'))\n      })\n\n      await api.post('checklists', {idCard})\n        .then(checklist => {\n        checkitemsSelected.forEach(async checkitem => {\n          await api.post('checkitems', null, {\n            params: {\n              idChecklist: checklist.id,\n              name: checkitem\n            }\n          })\n        })\n      })\n   \n    }).catch(err => alert('Erro ao enviar formulário'))\n\n    alert('Dados enviados com sucesso!')\n    \n    nameRef.current.value = TXT_INITIAL_VALUE\n    emailRef.current.value = TXT_INITIAL_VALUE\n    messageRef.current.value = TXT_INITIAL_VALUE\n    setDropdown(NUMBER_INITIAL_VALUE)\n    setTagsSelected(ARRAY_INITIAL_VALUE)\n    setCheckitemsSelected(ARRAY_INITIAL_VALUE)\n  }\n\n  function handleTagClick(id){\n  const alreadySelected = tagsSelected.findIndex(tag => tag === id)\n  if(alreadySelected >= 0){\n    const filteredItems = tagsSelected.filter(tag => tag !== id)\n    setTagsSelected(filteredItems)\n  }else{\n    setTagsSelected([...tagsSelected, id])\n  }\n  }\n\n  function handleCheckboxClick(id){\n    const alreadySelected = checkitemsSelected.findIndex(tag => tag === id)\n    if(alreadySelected >= 0){\n      const filteredItems = checkitemsSelected.filter(tag => tag !== id)\n      setCheckitemsSelected(filteredItems)\n    }else{\n      setCheckitemsSelected([...checkitemsSelected, id])\n    }\n  }\n\n  const checkboxs = [\n    { id:0, option: 'Opção 1' },\n    { id:1, option: 'Opção 2' },\n    { id:2, option: 'Opção 3' },\n  ]\n\n  return(\n    <Wrapper>\n      <h1>Formulário</h1>\n      <Form>\n\n        <FormContainer>\n          <FormGroup>\n            <label htmlFor={\"txtName\"}>Nome</label>\n            <Input \n              placeholder={\"John Doe\"} \n              id=\"txtName\" \n              ref={nameRef} \n              type=\"text\"\n              autoComplete={'false'}\n              />\n          </FormGroup>\n          <FormGroup>\n            <label htmlFor={\"txtEmail\"}>Email</label>\n            <Input \n              placeholder={\"email@domain.com\"} \n              id=\"txtEmail\" \n              ref={emailRef}\n              type=\"email\"\n              />\n          </FormGroup>\n          <FormGroup>\n            <label htmlFor={\"txtMessage\"}>Mensagem</label>\n            <textarea \n              id=\"txtMessage\" \n              rows=\"9\" \n              placeholder={\"Type something\"} \n              style={{resize:'vertical'}}\n              ref={messageRef}\n              />\n          </FormGroup>\n          \n        </FormContainer>\n\n        <div>\n          <FormGroup>\n            <span>{'\\u00a0'}</span>\n            <CheckboxGroup>\n              {checkboxs.map(checkbox => (\n                <CheckboxItem\n                  key={checkbox.id}\n                  onClick={() => handleCheckboxClick(checkbox.id)}\n                  >\n                  <input\n                    checked={checkitemsSelected.includes(checkbox.id) ? true : false}\n                    id={`${checkbox.option}${checkbox.id}`} \n                    type=\"checkbox\"/>\n                  <label htmlFor={`${checkbox.option}${checkbox.id}`}>{checkbox.option}</label>\n                </CheckboxItem>\n              ))}\n            </CheckboxGroup>\n          </FormGroup>\n          <FormGroup>\n          <label>Dropdown</label>\n          <select value={dropdown} onChange={(e) => setDropdown(e.target.value)}>\n            <option value=\"0\">Sem experiência</option>\n            <option value=\"1\">1-2 anos de experiência</option>\n            <option value=\"2\">3-5 anos de experiência</option>\n            <option value=\"3\">+ 5 anos de experiência</option>\n          </select>\n          </FormGroup>\n          <FormGroup>\n            <h2 style={{marginTop:-1}}>Tags</h2>\n            <TagContainer>\n              {tags.map(tag => (\n                <Tag\n                  key={tag.id} \n                  style={\n                    tagsSelected.includes(tag.id) \n                    ?{ backgroundColor: '#000', color: '#EFFFFA', fontWeight:'bold', textTransform:'uppercase'} \n                    : { backgroundColor: '#EFFFFA', fontWeight:'bold', textTransform:'uppercase'}}\n                  onClick={() => handleTagClick(tag.id)}\n                  >\n                  <span>{tag.name}</span>\n                </Tag>\n              ))}\n            </TagContainer>\n          </FormGroup>\n         \n          <button type=\"reset\" onClick={handleSubmit}>Enviar</button>\n        </div>\n\n      </Form>\n    </Wrapper>\n  )\n}","import React from 'react'\nimport Header from './components/header';\nimport { GlobalStyles } from './global';\nimport Contato from './pages/contato';\n\nfunction App() {\n  return (\n    <>\n    <GlobalStyles />\n    <Header/>\n    <Contato/>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}